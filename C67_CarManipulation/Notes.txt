Car Manipulation functions

How to Check:
============
run the node with the DRC simulation
------------------------------------------------------------------------------

to test one of the 6 action servers, use 6 client nodes.

for example:
to test SteeringWheel_Server:

run server:
rosrun C67_CarManipulation SteeringWheel_server

run client:
rosrun C67_CarManipulation SteeringWheel_client 
-------------------------------------------------------------------------------

to test the rPoint,lPoint nodes, run it with *RPY parameters time and NO. of points.

for example:

right hand(x y z R P Y sec points_Number):
rosrun C67_CarManipulation rPath .26 -.63 .46 0 0 1.5 2 100
rosrun C67_CarManipulation rPath .45 -.4 .4 0 0 1.5 2 100
left hand:
rosrun C67_CarManipulation lPath .26 .63 .46 0 0 -1.5 2 100
rosrun C67_CarManipulation lPath .45 .4 .4 0 0 -1.5 2 100

if solution exists the movement command will be transfered to the DRC module.
if no solution was found, no command will be sent to the module.

to see only arms position run nodes w/o parameters.

Prints
======
-Current Position and arm 6 angles
if parameters where given
-the RPY Target
if solution exists the node prints:
-solution for arm's 6 angles
-RPY of solution
-total error of solution compared to target

example print: 
Current Position:
q4-q9:0.024647, 0.302808, 1.721455, -1.419178, -1.381719, 0.290994
RPY(0.221138, -0.636597, 0.333620, 0.424570, -0.104114, 1.411099)
Target:
RPY(0.260000, -0.630000, 0.460000, 0.000000, 0.000000, 1.500000)
Solution/Command:
q4-q9:-0.100000, 0.003002, 1.707083, -1.447886, -1.571000, -0.007935
RPY(0.260000, -0.630000, 0.460000, 0.009789, 0.001782, 1.510138)
error: 0.020772



*RPY parameters are x,y,z,R,P,Y: x,y,z - position, R,P,Y - orientation.
-------------------------------------------------------------------------------

