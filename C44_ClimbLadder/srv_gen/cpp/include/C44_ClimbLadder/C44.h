/* Auto-generated by genmsg_cpp for file /home/ariy/robil/C44_ClimbLadder/srv/C44.srv */
#ifndef C44_CLIMBLADDER_SERVICE_C44_H
#define C44_CLIMBLADDER_SERVICE_C44_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"

#include "C44_ClimbLadder/C23C44_LDIM.h"
#include "C44_ClimbLadder/C23C44_DIS.h"


#include "C44_ClimbLadder/C44C0_CLS.h"

namespace C44_ClimbLadder
{
template <class ContainerAllocator>
struct C44Request_ {
  typedef C44Request_<ContainerAllocator> Type;

  C44Request_()
  : ladder_dimensions_msg()
  , distance_between_steps_msg()
  {
  }

  C44Request_(const ContainerAllocator& _alloc)
  : ladder_dimensions_msg(_alloc)
  , distance_between_steps_msg(_alloc)
  {
  }

  typedef  ::C44_ClimbLadder::C23C44_LDIM_<ContainerAllocator>  _ladder_dimensions_msg_type;
   ::C44_ClimbLadder::C23C44_LDIM_<ContainerAllocator>  ladder_dimensions_msg;

  typedef  ::C44_ClimbLadder::C23C44_DIS_<ContainerAllocator>  _distance_between_steps_msg_type;
   ::C44_ClimbLadder::C23C44_DIS_<ContainerAllocator>  distance_between_steps_msg;


  typedef boost::shared_ptr< ::C44_ClimbLadder::C44Request_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::C44_ClimbLadder::C44Request_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct C44Request
typedef  ::C44_ClimbLadder::C44Request_<std::allocator<void> > C44Request;

typedef boost::shared_ptr< ::C44_ClimbLadder::C44Request> C44RequestPtr;
typedef boost::shared_ptr< ::C44_ClimbLadder::C44Request const> C44RequestConstPtr;


template <class ContainerAllocator>
struct C44Response_ {
  typedef C44Response_<ContainerAllocator> Type;

  C44Response_()
  : climb_a_ladder_Success_msg()
  {
  }

  C44Response_(const ContainerAllocator& _alloc)
  : climb_a_ladder_Success_msg(_alloc)
  {
  }

  typedef  ::C44_ClimbLadder::C44C0_CLS_<ContainerAllocator>  _climb_a_ladder_Success_msg_type;
   ::C44_ClimbLadder::C44C0_CLS_<ContainerAllocator>  climb_a_ladder_Success_msg;


  typedef boost::shared_ptr< ::C44_ClimbLadder::C44Response_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::C44_ClimbLadder::C44Response_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct C44Response
typedef  ::C44_ClimbLadder::C44Response_<std::allocator<void> > C44Response;

typedef boost::shared_ptr< ::C44_ClimbLadder::C44Response> C44ResponsePtr;
typedef boost::shared_ptr< ::C44_ClimbLadder::C44Response const> C44ResponseConstPtr;

struct C44
{

typedef C44Request Request;
typedef C44Response Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct C44
} // namespace C44_ClimbLadder

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::C44_ClimbLadder::C44Request_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::C44_ClimbLadder::C44Request_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::C44_ClimbLadder::C44Request_<ContainerAllocator> > {
  static const char* value() 
  {
    return "24ca5df1c755e634d4f8aec87d55c1b0";
  }

  static const char* value(const  ::C44_ClimbLadder::C44Request_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x24ca5df1c755e634ULL;
  static const uint64_t static_value2 = 0xd4f8aec87d55c1b0ULL;
};

template<class ContainerAllocator>
struct DataType< ::C44_ClimbLadder::C44Request_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C44_ClimbLadder/C44Request";
  }

  static const char* value(const  ::C44_ClimbLadder::C44Request_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::C44_ClimbLadder::C44Request_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C44_ClimbLadder/C23C44_LDIM ladder_dimensions_msg\n\
C44_ClimbLadder/C23C44_DIS distance_between_steps_msg\n\
\n\
================================================================================\n\
MSG: C44_ClimbLadder/C23C44_LDIM\n\
float32[] ladder_dimensions\n\
\n\
================================================================================\n\
MSG: C44_ClimbLadder/C23C44_DIS\n\
float32 distance_between_steps\n\
\n\
";
  }

  static const char* value(const  ::C44_ClimbLadder::C44Request_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::C44_ClimbLadder::C44Response_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::C44_ClimbLadder::C44Response_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::C44_ClimbLadder::C44Response_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4fb75a3eea0239edca2121454cdf62e3";
  }

  static const char* value(const  ::C44_ClimbLadder::C44Response_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x4fb75a3eea0239edULL;
  static const uint64_t static_value2 = 0xca2121454cdf62e3ULL;
};

template<class ContainerAllocator>
struct DataType< ::C44_ClimbLadder::C44Response_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C44_ClimbLadder/C44Response";
  }

  static const char* value(const  ::C44_ClimbLadder::C44Response_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::C44_ClimbLadder::C44Response_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C44_ClimbLadder/C44C0_CLS climb_a_ladder_Success_msg\n\
\n\
\n\
\n\
================================================================================\n\
MSG: C44_ClimbLadder/C44C0_CLS\n\
bool climb_a_ladder_success\n\
\n\
";
  }

  static const char* value(const  ::C44_ClimbLadder::C44Response_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::C44_ClimbLadder::C44Response_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::C44_ClimbLadder::C44Request_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ladder_dimensions_msg);
    stream.next(m.distance_between_steps_msg);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct C44Request_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::C44_ClimbLadder::C44Response_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.climb_a_ladder_Success_msg);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct C44Response_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<C44_ClimbLadder::C44> {
  static const char* value() 
  {
    return "a70e7b52412f77b8f72fb49133206e55";
  }

  static const char* value(const C44_ClimbLadder::C44&) { return value(); } 
};

template<>
struct DataType<C44_ClimbLadder::C44> {
  static const char* value() 
  {
    return "C44_ClimbLadder/C44";
  }

  static const char* value(const C44_ClimbLadder::C44&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<C44_ClimbLadder::C44Request_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a70e7b52412f77b8f72fb49133206e55";
  }

  static const char* value(const C44_ClimbLadder::C44Request_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<C44_ClimbLadder::C44Request_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C44_ClimbLadder/C44";
  }

  static const char* value(const C44_ClimbLadder::C44Request_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<C44_ClimbLadder::C44Response_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a70e7b52412f77b8f72fb49133206e55";
  }

  static const char* value(const C44_ClimbLadder::C44Response_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<C44_ClimbLadder::C44Response_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C44_ClimbLadder/C44";
  }

  static const char* value(const C44_ClimbLadder::C44Response_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // C44_CLIMBLADDER_SERVICE_C44_H

