Usage of PoseController:
------------------------

Prerequisites:
--------------
1) C45 must be running.

Running:
--------
1) Running C45 launch file will start this module.

Usage:
------
This module creates the following services:
/PoseController/hand_movement
/PoseController/right_hand_movement
/PoseController/left_hand_movement
/PoseController/delta_hand_movement
/PoseController/foot_movement
/PoseController/delta_foot_movement
/PoseController/back_movement
/PoseController/delta_back_movement
/PoseController/neck_movement
/PoseController/delta_neck_movement
/PoseController/start
/PoseController/reset_joints
/PoseController/stop

and advertises to the following topic:
/PoseController/joint_states

You need to call /PoseController/start (with message of type std_srvs/Empty) to enable this module.
/PoseController/stop will stop it and /PoseController/reset_joints will reset the saved joints to the current real values of the robot's joints.

/PoseController/*_movement services set the values of the joints with the inputs.
/PoseController/delta_*_movement services add the inputs as deltas to the joints' values.
/PoseController/right_hand_movement and /PoseController/left_hand_movement are services for moving only one arm. Inputs to the other arm (e.g. right arm joint on left arm service) are ignored).

This module automatically detects the BDI controller desired behavior (e.g. "Manipulate", "User") and sends the correct k_effort values accordingly.

Update: /PoseController/back_lbz_neck_ay service was added for back_lbz and neck_ay manipulation.